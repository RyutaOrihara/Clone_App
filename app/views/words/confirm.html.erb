<!-- パーシャルファイルで作った_form.html.erbではテキストボックス内を編集できてしまう。 -->
<!-- 確認画面で求められるのは、その場で編集することではなく、入力した値を確認すること -->
<!-- newとは違うViewファイルconfirm.html.erbを作る必要がある -->

<h3>以下の内容で送信します</h3>
<%= form_with(model: @word,local: true) do |form|  %>
<%# 送られてきた値は保持するが表示はしないform.hidden_fieldを使用する %>
<%# new Viewからきた値をそのまま、confirmアクションに渡すようにしている %>
  <%= form.hidden_field :content %>
  <%# 確認用の値を表示させるために、インスタンス変数の中の値を出力するようにしている %>
  <%# そのためにはコントローラにconfirmメソッドを追加して@wordを定義する %>
  <p>ツイート内容<%= @word.content %></p>
  <%= form.submit "登録する" %>
  <%# form_with内に作った戻るボタンはcreateアクションを実行リクエストするため、HTTPメソッドがpostとして実行される %>
  <%# つまり、前回のアクションに値を保持して戻れるようになる %>
  <%# この段階では両ボタンともcreateアクションが実行されてしまう⇨一瞬悩んだが、link_toの引数backとの勘違いだった。今はformの話 %>
  <%# 戻るボタンで実行されたcreateアクションであることを示すために、独自のparametersを追加してcreateアクション側で処理を振り分ける必要がある。 %>
  <%# submitにname属性を付け、独自のparametersを追加 ここがlink_toの引数backと同じ要領 %>
  <%# <%= form.submit “戻る”, name: ‘back’ %>
  <%# とすることで、parametersにname: ‘back’を追加することできた %>
  <%# ログからもPrameterに"back"=>"戻る"が追加されてる %>
  <%# この時点では、controller側で振り分け処理をしていないため、登録される %>
  <%# コントローラーにてcreateアクション側で戻るボタンが実行されたかどうか、params[:back]を使って条件分岐を設定する %>
  <%= form.submit "戻る", name: 'back' %>
<% end %>
<%# 戻るボタンを作成して前のアクションに戻れるようにする %>
<%# 前のアクションに戻るにはプレフィックス指定ではなく引数backを記述 %>
<%# HTTPメソッドがGETなのでControllerにパラメータを渡せず、戻ると初期化されてしまう %>
<%# パラメータが初期化されないように戻るボタンを作成するには、form_withを使用する %>
<%# urlオプションによりform_withで実行をリクエストするアクションを指定することができる。 %>
<%# <%= link_to "戻る", :back  %>
